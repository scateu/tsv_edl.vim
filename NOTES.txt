24 +250

This two step process should work

Step 1 Pad out the audio in each segment

ffmpeg -i segment1.mov -af apad -c:v copy <audio encoding params> -shortest -avoid_negative_ts make_zero -fflags +genpts padded1.mov

Or

Generate segments with synced streams

ffmpeg -y -ss 00:00:02.750 -i input.MOV -c copy -t 00:00:05.880 -avoid_negative_ts make_zero -fflags +genpts segment.MOV

Step 2 Concat

ffmpeg -f concat -i segments.txt -c copy test.mov

where segments.txt consists of the names of the padded files.

 -- https://stackoverflow.com/questions/35416110/ffmpeg-concat-video-and-audio-out-of-sync

One liner

```bash
ffmpeg -f concat -safe 0 -i <(for f in ./*.mp4; do echo "file '$PWD/$f'"; done) -c copy output.mp4
```

ffmpeg -ss <START_TC> -to <STOP_TC> 



losslessly:

ffmpeg -i input1.mp4 -c copy -bsf:v h264_mp4toannexb -f mpegts intermediate1.ts
ffmpeg -i input2.mp4 -c copy -bsf:v h264_mp4toannexb -f mpegts intermediate2.ts
ffmpeg -i "concat:intermediate1.ts|intermediate2.ts" -c copy -bsf:a aac_adtstoasc output.mp4


------

DEBUG:

vim -c "breakadd file ~/.vim/pack/plugins/start/tsv_edl.vim/syntax/tsv_edl.vim"  somefile.txt



-----

macOS(native): nc -U

Linux: nc -U doesn't work.  use socat -
       find ./ -name \*.vim -exec sed -i 's/nc -U/socat -/g' {} \;

----

VTT:

	youtube-dl --all-subs --skip-download  https://www.c-span.org/video/?66368-1/madame-chiang-kai-shek-reception
